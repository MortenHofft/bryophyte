{"version":3,"sources":["styles/Root.js","components/search/OccurrenceSearch/state/AppContext.js","components/search/OccurrenceSearch/state/withContext.js","styles/helper.js","components/layout/Tabs/Tabs.js","components/elementChildren.js","components/elements/Button/Button.styles.js","styles/util.js","components/elements/Button/Button.js","components/search/OccurrenceSearch/FilterBar/FilterBar.js","components/search/OccurrenceSearch/Layout.js","components/search/OccurrenceSearch/state/StateProvider.js","components/search/OccurrenceSearch/OccurrenceSearch.js","components/layout/Level/LevelChildren.js","components/layout/Level/Level.js","components/search/OccurrenceSearch/locales/en.js","themeBuilder/utils.js","themeBuilder/index.js","App.js","styles/themes/light.js","serviceWorker.js","index.js"],"names":["Root","Rt","as","props","theme","useTheme","css","color","fontSize","background","displayName","defaultProps","React","createContext","withContext","injectedProps","context","WrappedComponent","AppContext","Consumer","helper","styled","li","getDefaultActiveKey","children","defaultActiveKey","func","index","Children","forEach","child","isValidElement","eventKey","Tabs","useUncontrolled","activeKey","onSelect","controlledProps","console","log","useState","role","map","c","disabled","tabClassName","className","onClick","e","renderTab","Tab","active","colors","primary500","tabKey","spinAround","keyframes","button","dense","primary","primary600","primaryOutline","primary700","outline","transparentInk40","ghost","danger","link","loading","block","getClassNames","prefix","elementName","classes","root","reduce","a","Button","Btn","type","classesToApply","Object","keys","key","val","push","humanClasses","getClasses","styles","x","style","filter","stateApi","updateFilter","update","JSON","stringify","layout","test","setKey","k","marginLeft","id","defaultMessage","values","current","value","total","StateProvider","options","setState","state","must","datasetKey","Provider","this","Component","OccurrenceSearch","shared","LevelLeft","div","LevelRight","LevelItem","Level","Lvl","paperBackground","Item","Left","Right","locale","messages","first","previous","next","shadeHexColor","percent","f","parseInt","slice","t","p","R","G","B","Math","round","toString","defaultTheme","fullTheme","assign","transparentInk60","transparentInk20","transparentInk80","transparentInk50","themeBuilder","App","en","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd8b9bba.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useTheme } from 'emotion-theming';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Root = ({\n  as: Rt,\n  ...props\n}) => {\n  const theme = useTheme();\n  return <Rt css={css`\n          font-family: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n          color: ${theme.color || '#4a4a4a'};\n          font-size: ${theme.fontSize || '1em'};\n          font-weight: 400;\n          line-height: 1.5;\n          box-sizing: border-box;\n          background: ${theme.background || 'white'};\n          *, *::before, *::after, strong {\n            box-sizing: inherit;\n          }\n      `} {...props}>\n  </Rt>\n}\n\nRoot.displayName = 'Root'\n\nRoot.defaultProps = {\n  as: 'div'\n}\n\nRoot.propTypes = {\n  as: PropTypes.node\n}\n\nexport default Root;","import React from 'react';\n\n// A context to share state for the full app/component\nexport default React.createContext({});","import React from 'react';\n\nimport AppContext from './AppContext';\n\n/**\n * Will add data from the ComponentContext to the wrapped component's props\n * To use you should provide a map of params that you need injected (similar to Redux connect map)\n *\n * Usage exanmple: \n * const mapContextToProps = ({ locale }) => ({ locale });\n * export default withContext(mapContextToProps)(MyComponent);\n * By default wrapper would provide nothing\n * @param injectedProps\n * @returns {function(*): function(*): *}\n */\nconst withContext = (injectedProps = context => {}) => WrappedComponent => {\n  const Wrapper = props => {\n    return (\n      <AppContext.Consumer>\n        {context => <WrappedComponent {...injectedProps(context)} {...props} />}\n      </AppContext.Consumer>\n    );\n  };\n\n  return Wrapper;\n};\n\nexport default withContext;\n\n","export const helper = {\n  noUserSelect: `\n    -webkit-touch-callout: none;\n    user-select: none;\n  `\n};","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport styled from '@emotion/styled'\nimport { useTheme } from 'emotion-theming';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolled } from 'uncontrollable';\n\nimport { helper } from '../../../styles/helper';\nimport { forEach, map } from '../../elementChildren';\n\nconst Tab = styled.li`\n  display: block;\n`;\n\nconst TabButton = ({ active, children, eventKey, onClick, ...props }) => {\n  const theme = useTheme();\n  return (\n    <a role=\"tab\"\n      css={css`\n      align-items: center;\n      border-bottom-color: #dbdbdb;\n      border-bottom-style: solid;\n      color: #4a4a4a;\n      display: flex;\n      justify-content: center;\n      margin-bottom: -2px;\n      padding: 0.5em 1em;\n      vertical-align: top;\n      background: none;\n      border-width: 0 0 2px 0;\n      font-size: 1em;\n      &:hover {\n        border-bottom-color: #363636;\n        color: #363636;\n      }\n      ${active ? `\n        border-bottom-color: ${theme.colors.primary500};\n        color: ${theme.colors.primary500};\n      ` : ''}\n    `}\n      onClick={e => onClick(props.tabKey)}\n      {...props}\n    >\n      {children}\n    </a>\n  )\n};\n\nfunction getDefaultActiveKey(children) {\n  let defaultActiveKey;\n  forEach(children, child => {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  const { eventKey, disabled, tabClassName } = child.props;\n  return (\n    <li\n      // eventKey={eventKey}\n      disabled={disabled}\n      className={tabClassName}\n      role=\"tab\"\n      onClick={e => console.log(eventKey)}\n    >\n      { child }\n    </li>\n  );\n}\n\nconst Tabs = (props) => {\n  const {\n    children,\n    onSelect,\n    activeKey = getDefaultActiveKey(children),\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect',\n  });\n\n  console.log(activeKey);\n  const [key, setKey] = useState(activeKey);\n  // console.log(children);\n  // children.forEach(x => console.log(x.props.eventKey));\n  const theme = useTheme();\n  return <nav css={css`\n        ${helper.noUserSelect}\n        -webkit-overflow-scrolling: touch;\n        align-items: stretch;\n        display: flex;\n        font-size: 1em;\n        justify-content: space-between;\n        overflow: hidden;\n        overflow-x: auto;\n        white-space: nowrap;\n      `} {...controlledProps}>\n    <ul role=\"tablist\" css={css`\n          align-items: center;\n          margin: 0;\n          padding: 0;\n          border-bottom-color: #dbdbdb;\n          border-bottom-style: solid;\n          border-bottom-width: 2px;\n          display: flex;\n          flex-grow: 1;\n          flex-shrink: 0;\n          justify-content: flex-start;\n        `}>\n      {map(children, c => renderTab(c, onSelect))}\n    </ul>\n  </nav>\n}\n\nTabs.displayName = 'Tabs';\n\nTabs.propTypes = {\n  className: PropTypes.string\n}\n\nTabs.Tab = TabButton;\n\nexport default Tabs","  \nimport React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n\n  return React.Children.map(children, child =>\n    React.isValidElement(child) ? func(child, index++) : child,\n  );\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if (React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { css, keyframes } from '@emotion/core';\nimport { helper } from '../../../styles/helper';\n\nexport const button = theme => css`\n  ${helper.noUserSelect}\n  appearance: none;\n\n  display: inline-flex;\n  align-items: center;\n  justify-content: flex-start;\n  \n  text-align: center;\n  white-space: nowrap;\n\n  border: 1px solid transparent;\n  border-radius: 4px;\n  box-shadow: none;\n\n  font-size: 1em;\n  height: ${theme.dense ? 1.5 : 2.5}em;\n  line-height: calc(1.5em - 6px);\n  position: relative;\n  margin: 0;\n  background-color: white;\n  color: ${theme.color};\n  cursor: pointer;\n  justify-content: center;\n  padding-left: ${theme.dense ? 0.5 : 1}em;\n  padding-right: ${theme.dense ? 0.5 : 1}em;\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 0.125em rgba(50, 115, 220, 0.25);\n  }\n`;\n\nexport const primary = theme => css`\n  background-color: ${theme.colors.primary500};\n  color: white;\n  &:hover {\n    background-color: ${theme.colors.primary600};\n  }\n`;\n\nexport const primaryOutline = (theme) => css`\n  border-color: ${theme.colors.primary500};\n  background: none;\n  color: ${theme.colors.primary700};\n`;\n\nexport const outline = (theme) => css`\n  border-color: ${theme.transparentInk40};\n  background: none;\n`;\n\nexport const ghost = (theme) => css`\n  border-color: #808080;\n  color: #808080;\n  background: none;\n`;\n\nexport const danger = (theme) => css`\n  background: tomato;\n  color: white;\n`;\n\nexport const link = (theme) => css`\n  border-color: transparent;\n  background: none;\n`;\n\nexport const block = (theme) => css`\n  display: flex; \n  width: 100%;\n`;\n\nexport const spinAround = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(359deg);\n  }\n`;\n\nexport const loading = (theme) => css`\n  &:after {\n    animation: ${spinAround} 500ms infinite linear;\n    border: 2px solid #dbdbdb;\n    border-radius: 290486px;\n    border-right-color: transparent;\n    border-top-color: transparent;\n    content: \"\";\n    display: block;\n    height: 1em;\n    position: relative;\n    width: 1em;\n\n    position: absolute;\n    left: calc(50% - (1em / 2));\n    top: calc(50% - (1em / 2));\n    position: absolute !important;\n  }\n  color: transparent !important;\n  pointer-events: none;\n`;\n\nexport default {\n  button,\n  primary,\n  primaryOutline,\n  outline,\n  ghost,\n  danger,\n  link,\n  loading,\n  block\n};","export const getClasses = (theme, elementName, classes) => {\n  const classesToApply = [];\n  const prefix = theme.prefix || 'gbif';\n\n  Object.keys(classes).forEach(key => {\n    const val = classes[key];\n    if (val === true) {\n      classesToApply.push(key);\n    } else if(typeof val === 'string') {\n      classesToApply.push(val);\n    }\n  });\n  const humanClasses = getClassNames(prefix, elementName, classesToApply);\n  return { humanClasses, classesToApply};\n}\n\nconst getClassNames = (prefix, elementName, classes) => {\n  const root = `${prefix}-${elementName}`;\n  return classes.reduce((a, c) => `${a} ${root}-${c}`, `${root}`);\n}","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useTheme } from 'emotion-theming';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.styles';\nimport { getClasses } from '../../../styles/util';\n\nconst Button = ({\n  as: Btn,\n  className = '',\n  loading = false,\n  block = false,\n  type = 'primary',\n  ...props\n}) => {\n  const classes = {type, loading, block};\n  const theme = useTheme();\n  const { classesToApply, humanClasses } = getClasses(theme, 'button', classes);\n  return <Btn className={`${humanClasses} ${className}`} css={css`\n        ${styles.button(theme)}\n        ${classesToApply.map(x => styles[x](theme))};\n      `} {...props} />\n}\n\nButton.displayName = 'Button'\n\nButton.defaultProps = {\n  as: 'button'\n}\n\nButton.propTypes = {\n  as: PropTypes.oneOf(['button', 'a', 'input']),\n  className: PropTypes.string,\n  type: PropTypes.oneOf(['primary', 'primaryOutline', 'outline', 'ghost', 'danger', 'link']),\n  loading: PropTypes.bool,\n  block: PropTypes.bool,\n}\n\nexport default Button;","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useTheme } from 'emotion-theming';\nimport withContext from '../state/withContext';\nimport React from 'react';\n// import PropTypes from 'prop-types';\n\nimport { Button } from '../../../elements/Button';\nconst FilterBar = ({\n  className = '',\n  stateApi,\n  ...props\n}) => {\n  const theme = useTheme();\n  const prefix = theme.prefix || 'gbif';\n  const elementName = 'filterBar';\n  return <div className={`${className} ${prefix}-${elementName}`}\n  css={css`${style(theme)}`} {...props}>\n    <Button css={css`margin-right: 4px;`}>Species or group</Button>\n    <Button type=\"outline\" css={css`margin-right: 4px;`} onClick={e => stateApi.updateFilter({update: 'fromFilter'})}>Button</Button>\n    {JSON.stringify(props.filter, null, 2)}\n  </div>\n}\n\nFilterBar.propTypes = {\n}\n\nexport const style = (theme) => css`\n  \n`;\n\nconst mapContextToProps = ({ filter, stateApi }) => ({ filter, stateApi });\nexport default withContext(mapContextToProps)(FilterBar);","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useTheme } from 'emotion-theming';\nimport React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { MdClose } from \"react-icons/md\";\nimport withContext from './state/withContext';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport { Tabs } from \"../../layout/Tabs\";\n\nimport { FilterBar } from './FilterBar';\nconst Tab = Tabs.Tab;\n\nconst Layout = ({\n  className = '',\n  ...props\n}) => {\n  const [key, setKey] = useState('home');\n  const theme = useTheme();\n  const prefix = theme.prefix || 'gbif';\n  const elementName = 'occurrenceSearchLayout';\n  return <div className={`${className} ${prefix}-${elementName}`}\n    css={css`${layout(theme, prefix, elementName)}`} {...props}>\n    <div className={`${prefix}-${elementName}-navBar`}>\n      <div className={`${prefix}-${elementName}-filters`}>\n        <FilterBar></FilterBar>\n      </div>\n      <div className={`${prefix}-${elementName}-views`}>\n      <Tabs activeKey={key} onSelect={k => setKey(k)}>\n        <Tab eventKey=\"home\">\n          Species or Group\n        </Tab>\n        <Tab eventKey=\"profile\">\n          Second Option<MdClose style={{marginLeft: 8}}/>\n        </Tab>\n        <Tab eventKey=\"contact\" disabled>\n          third\n        </Tab>\n      </Tabs>\n      </div>\n    </div>\n    <div className={`${prefix}-${elementName}-body`}>\n      <div className={`${prefix}-${elementName}-main`}>content {props.test}<br />\n      <FormattedMessage\n                id='pagination.pageXofY'\n                defaultMessage={'Loading'}\n                values={{ current: <FormattedNumber value={10}/>, total: <FormattedNumber value={20000}/> }}\n              />\n      </div>\n      {/* <aside className={`${prefix}-${elementName}-drawer`}>right drawer</aside> */}\n    </div>\n    <div className={`${prefix}-${elementName}-footer`}>\n      <div>Footer content</div>\n    </div>\n  </div>\n}\n\nLayout.propTypes = {\n}\n\nexport const layout = (theme, prefix, elementName) => css`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: auto;\n  .${prefix}-${elementName}-navBar {\n    flex: 0 0 auto;\n    flex-direction: column;\n    display: flex;\n  }\n  .${prefix}-${elementName}-filters {\n    border-bottom: 1px solid #2a2a38;\n    padding: 8px;\n  }\n  .${prefix}-${elementName}-views {\n    \n  }\n  .${prefix}-${elementName}-body {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: row;\n    overflow: hidden;\n  }\n  .${prefix}-${elementName}-main {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    margin: 10;\n  }\n  .${prefix}-${elementName}-drawer {\n    border-left: 1px solid #2a2a38;\n  }\n  .${prefix}-${elementName}-footer {\n    flex: 0 0 auto;\n    &>div {\n      border-top: 1px solid #2a2a38;\n      padding: 5px 12px;\n      color: white;\n      font-size: 0.85em;\n      font-weight: 700;\n    }\n  }\n`;\n\nconst mapContextToProps = ({ test }) => ({ test });\nexport default withContext(mapContextToProps)(Layout);","// This file holds the majority of the app state: current filters, current view, update function etc.\nimport React from 'react';\nimport AppContext from './AppContext';\n// import api from '../api';\n// import TablePresentation from '../components/views/Table/TablePresentation';\n// import MapPresentation from '../components/views/Map/MapPresentation';\n// import QuickSearchPresentation from '../components/QuickSearch/QuickSearchPresentation';\n// import { get } from 'lodash';\n// import { getFilterFromUrl, getUpdatedFilter, pushStateToUrl } from './stateHelper';\n// import { strToHash } from '../util/helpers';\n// import history from './history';\n\n// export const views = {\n//   TABLE: 'TABLE',\n//   GALLERY: 'GALLERY',\n//   MAP: 'MAP',\n// }\n\n/**\n * Holds all cross cutting state for the occurrence search (most prominently the current filter) and is responsible for managing URL params as well\n */\nclass StateProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // const components = {\n    //   TableView: get(props, 'settings.components.TableView', TablePresentation),\n    //   MapView: get(props, 'settings.components.MapView', MapPresentation),\n    //   QuickSearch: get(props, 'settings.components.QuickSearch', QuickSearchPresentation),\n    // }\n\n    // let filter = getFilterFromUrl(window.location.search);\n    // this.unlisten = history.listen((location, action) => {\n    //   this.updateStateFilter(getFilterFromUrl(location.search));\n    // });\n\n    this.state = {\n      // appRef: React.createRef(),\n      // activeView: views.TABLE,\n      // filter,//{year: [2018, {gte: 1928, lt:1929}]}, // current filter\n      stateApi: {\n        // updateView: this.updateView, // update the active view\n        updateFilter: this.updateFilter, // updates a single field\n        // updateQuery, // sets the full query\n      },\n      // components,\n      // api\n      test: 10,\n      filter: {must: {datasetKey: ['1234-1234-1234-1234']}} // current filter\n    }\n  }\n\n  // updateView = selected => {\n  //   if (!views[selected]) return;\n  //   this.setState({ activeView: selected });\n  // }\n\n  updateFilter = options => {\n    this.setState({filter: options});\n    // const filter = getUpdatedFilter(this.state.filter, options);\n    // pushStateToUrl(filter);\n  }\n\n  // updateStateFilter = filter => {\n  //   const filterHash = strToHash(JSON.stringify(filter));\n  //   this.setState({\n  //     filter,\n  //     filterHash\n  //   });\n  // }\n\n  render() {\n    return (\n      <AppContext.Provider value={this.state}>\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default StateProvider;","// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from './Layout';\nimport StateProvider from \"./state/StateProvider\";\n// import history from './history';\n// import qs from 'querystringify';\n\nfunction OccurrenceSearch(props) {\n  return (\n    <StateProvider>\n      <Layout {...props}></Layout>\n    </StateProvider>\n  );\n}\n\n// OccurrenceSearch.propTypes = {\n//   theme: PropTypes.object,\n//   settings: PropTypes.object,\n//   locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n//   messages: PropTypes.object\n// };\n\nexport default OccurrenceSearch;","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useTheme } from 'emotion-theming';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled'\n\nconst shared = css`\n  flex-basis: auto;\n  flex-grow: 0;\n  flex-shrink: 0;\n  align-items: center;\n  @media screen and (min-width: 769px), print {\n    display: flex;\n    margin: 0 -0.35em;\n  }\n`;\n\nexport const LevelLeft = styled.div`\n  ${shared}\n  justify-content: flex-start;\n`;\n\nexport const LevelRight = styled.div`\n  ${shared}\n  justify-content: flex-end;\n`;\n\nexport const LevelItem = styled.div`\n  align-items: center;\n  display: flex;\n  flex-basis: auto;\n  flex-grow: 0;\n  flex-shrink: 0;\n  justify-content: center;\n  flex-grow: 1;\n  margin: 0 0.35em;\n`;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useTheme } from 'emotion-theming';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { LevelItem, LevelLeft, LevelRight } from './LevelChildren';\n\nconst Level = ({\n  as: Lvl,\n  ...props\n}) => {\n  const theme = useTheme();\n  return <Lvl css={css`\n        align-items: center;\n        justify-content: space-between;\n        background: ${theme.paperBackground};\n        img {\n          display: inline-block;\n          vertical-align: top;\n        }\n        @media screen and (min-width: 769px), print {\n          display: flex;\n        }\n      `} {...props}>\n      </Lvl>\n}\n\nLevel.displayName = 'Level'\n\nLevel.defaultProps = {\n  as: 'nav'\n}\n\nLevel.propTypes = {\n  as: PropTypes.node,\n  className: PropTypes.string,\n  // danger: PropTypes.bool,\n  // outlined: PropTypes.bool,\n  // primary: PropTypes.bool,\n  // loading: PropTypes.bool,\n}\n\nLevel.Item = LevelItem;\nLevel.Left = LevelLeft;\nLevel.Right = LevelRight;\n\nexport default Level","export default {\n\tlocale: 'en',\n\tmessages: {\n\t\tfirst: 'First',\n\t\tprevious: 'Previous',\n\t\tnext: 'Next',\n\t\toptions: 'Options',\n\t\t'appMenu.table': 'Table',\n\t\t'appMenu.gallery': 'Images',\n\t\t'appMenu.map': 'Map',\n\t\t'pagination.pageXofY': 'Page {current} of {total}',\n\t\t'noResultsForX': 'No suggestions for \\'{str}\\'',\n\t\t'enum.basisOfRecord.PRESERVED_SPECIMEN': 'Preserved specimen',\n    'enum.basisOfRecord.FOSSIL_SPECIMEN': 'Fossil specimen',\n    'enum.basisOfRecord.LIVING_SPECIMEN': 'Living specimen',\n    'enum.basisOfRecord.OBSERVATION': 'Observation',\n    'enum.basisOfRecord.HUMAN_OBSERVATION': 'Human observation',\n    'enum.basisOfRecord.MACHINE_OBSERVATION': 'Machine observation',\n    'enum.basisOfRecord.MATERIAL_SAMPLE': 'Material sample',\n    'enum.basisOfRecord.LITERATURE': 'Literature',\n\t\t'enum.basisOfRecord.UNKNOWN': 'Unknown',\n\t\t'enum.country.AF': 'Afghanistan',\n    'enum.country.AX': 'Åland Islands',\n    'enum.country.AL': 'Albania',\n    'enum.country.DZ': 'Algeria',\n    'enum.country.AS': 'American Samoa',\n    'enum.country.AD': 'Andorra',\n    'enum.country.AO': 'Angola',\n    'enum.country.AI': 'Anguilla',\n    'enum.country.AQ': 'Antarctica',\n    'enum.country.AG': 'Antigua and Barbuda',\n    'enum.country.AR': 'Argentina',\n    'enum.country.AM': 'Armenia',\n    'enum.country.AW': 'Aruba',\n    'enum.country.AU': 'Australia',\n    'enum.country.AT': 'Austria',\n    'enum.country.AZ': 'Azerbaijan',\n    'enum.country.BS': 'Bahamas',\n    'enum.country.BH': 'Bahrain',\n    'enum.country.BD': 'Bangladesh',\n    'enum.country.BB': 'Barbados',\n    'enum.country.BY': 'Belarus',\n    'enum.country.BE': 'Belgium',\n    'enum.country.BZ': 'Belize',\n    'enum.country.BJ': 'Benin',\n    'enum.country.BM': 'Bermuda',\n    'enum.country.BT': 'Bhutan',\n    'enum.country.BO': 'Bolivia, Plurinational State of',\n    'enum.country.BA': 'Bosnia and Herzegovina',\n    'enum.country.BW': 'Botswana',\n    'enum.country.BV': 'Bouvet Island',\n    'enum.country.BR': 'Brazil',\n    'enum.country.BQ': 'Bonaire, Sint Eustatius and Saba',\n    'enum.country.IO': 'British Indian Ocean Territory',\n    'enum.country.BN': 'Brunei Darussalam',\n    'enum.country.BG': 'Bulgaria',\n    'enum.country.BF': 'Burkina Faso',\n    'enum.country.BI': 'Burundi',\n    'enum.country.KH': 'Cambodia',\n    'enum.country.CM': 'Cameroon',\n    'enum.country.CA': 'Canada',\n    'enum.country.CV': 'Cabo Verde',\n    'enum.country.KY': 'Cayman Islands',\n    'enum.country.CF': 'Central African Republic',\n    'enum.country.TD': 'Chad',\n    'enum.country.CL': 'Chile',\n    'enum.country.CN': 'China',\n    'enum.country.CX': 'Christmas Island',\n    'enum.country.CC': 'Cocos (Keeling) Islands',\n    'enum.country.CO': 'Colombia',\n    'enum.country.KM': 'Comoros',\n    'enum.country.CG': 'Congo',\n    'enum.country.CD': 'Congo, The Democratic Republic of the',\n    'enum.country.CK': 'Cook Islands',\n    'enum.country.CR': 'Costa Rica',\n    'enum.country.CI': 'Côte d’Ivoire',\n    'enum.country.HR': 'Croatia',\n    'enum.country.CU': 'Cuba',\n    'enum.country.CW': 'Curaçao',\n    'enum.country.CY': 'Cyprus',\n    'enum.country.CZ': 'Czechia',\n    'enum.country.DK': 'Denmark',\n    'enum.country.DJ': 'Djibouti',\n    'enum.country.DM': 'Dominica',\n    'enum.country.DO': 'Dominican Republic',\n    'enum.country.EC': 'Ecuador',\n    'enum.country.EG': 'Egypt',\n    'enum.country.SV': 'El Salvador',\n    'enum.country.GQ': 'Equatorial Guinea',\n    'enum.country.ER': 'Eritrea',\n    'enum.country.EE': 'Estonia',\n    'enum.country.ET': 'Ethiopia',\n    'enum.country.FK': 'Falkland Islands (Malvinas)',\n    'enum.country.FO': 'Faroe Islands',\n    'enum.country.FJ': 'Fiji',\n    'enum.country.FI': 'Finland',\n    'enum.country.FR': 'France',\n    'enum.country.GF': 'French Guiana',\n    'enum.country.PF': 'French Polynesia',\n    'enum.country.TF': 'French Southern Territories',\n    'enum.country.GA': 'Gabon',\n    'enum.country.GM': 'Gambia',\n    'enum.country.GE': 'Georgia',\n    'enum.country.DE': 'Germany',\n    'enum.country.GH': 'Ghana',\n    'enum.country.GI': 'Gibraltar',\n    'enum.country.GR': 'Greece',\n    'enum.country.GL': 'Greenland',\n    'enum.country.GD': 'Grenada',\n    'enum.country.GP': 'Guadeloupe',\n    'enum.country.GU': 'Guam',\n    'enum.country.GT': 'Guatemala',\n    'enum.country.GG': 'Guernsey',\n    'enum.country.GN': 'Guinea',\n    'enum.country.GW': 'Guinea-Bissau',\n    'enum.country.GY': 'Guyana',\n    'enum.country.HT': 'Haiti',\n    'enum.country.HM': 'Heard Island and Mcdonald Islands',\n    'enum.country.VA': 'Holy See',\n    'enum.country.HN': 'Honduras',\n    'enum.country.HK': 'Hong Kong',\n    'enum.country.HU': 'Hungary',\n    'enum.country.IS': 'Iceland',\n    'enum.country.IN': 'India',\n    'enum.country.ID': 'Indonesia',\n    'enum.country.IR': 'Iran, Islamic Republic Of',\n    'enum.country.IQ': 'Iraq',\n    'enum.country.IE': 'Ireland',\n    'enum.country.IM': 'Isle of Man',\n    'enum.country.IL': 'Israel',\n    'enum.country.IT': 'Italy',\n    'enum.country.JM': 'Jamaica',\n    'enum.country.JP': 'Japan',\n    'enum.country.JE': 'Jersey',\n    'enum.country.JO': 'Jordan',\n    'enum.country.KZ': 'Kazakhstan',\n    'enum.country.KE': 'Kenya',\n    'enum.country.KI': 'Kiribati',\n    'enum.country.KP': 'Korea, Democratic People’s Republic of',\n    'enum.country.KR': 'Korea, Republic of',\n    'enum.country.XK': 'Kosovo',\n    'enum.country.KW': 'Kuwait',\n    'enum.country.KG': 'Kyrgyzstan',\n    'enum.country.LA': 'Lao People’s Democratic Republic',\n    'enum.country.LV': 'Latvia',\n    'enum.country.LB': 'Lebanon',\n    'enum.country.LS': 'Lesotho',\n    'enum.country.LR': 'Liberia',\n    'enum.country.LY': 'Libya',\n    'enum.country.LI': 'Liechtenstein',\n    'enum.country.LT': 'Lithuania',\n    'enum.country.LU': 'Luxembourg',\n    'enum.country.MO': 'Macao',\n    'enum.country.MK': 'Macedonia, The Former Yugoslav Republic of',\n    'enum.country.MG': 'Madagascar',\n    'enum.country.MW': 'Malawi',\n    'enum.country.MY': 'Malaysia',\n    'enum.country.MV': 'Maldives',\n    'enum.country.ML': 'Mali',\n    'enum.country.MT': 'Malta',\n    'enum.country.MH': 'Marshall Islands',\n    'enum.country.MQ': 'Martinique',\n    'enum.country.MR': 'Mauritania',\n    'enum.country.MU': 'Mauritius',\n    'enum.country.YT': 'Mayotte',\n    'enum.country.MX': 'Mexico',\n    'enum.country.FM': 'Micronesia, Federated States of',\n    'enum.country.MD': 'Moldova, Republic of',\n    'enum.country.MC': 'Monaco',\n    'enum.country.MN': 'Mongolia',\n    'enum.country.ME': 'Montenegro',\n    'enum.country.MS': 'Montserrat',\n    'enum.country.MA': 'Morocco',\n    'enum.country.MZ': 'Mozambique',\n    'enum.country.MM': 'Myanmar',\n    'enum.country.NA': 'Namibia',\n    'enum.country.NR': 'Nauru',\n    'enum.country.NP': 'Nepal',\n    'enum.country.NL': 'Netherlands',\n    'enum.country.AN': 'Netherlands Antilles',\n    'enum.country.NC': 'New Caledonia',\n    'enum.country.NZ': 'New Zealand',\n    'enum.country.NI': 'Nicaragua',\n    'enum.country.NE': 'Niger',\n    'enum.country.NG': 'Nigeria',\n    'enum.country.NU': 'Niue',\n    'enum.country.NF': 'Norfolk Island',\n    'enum.country.MP': 'Northern Mariana Islands',\n    'enum.country.NO': 'Norway',\n    'enum.country.OM': 'Oman',\n    'enum.country.PK': 'Pakistan',\n    'enum.country.PW': 'Palau',\n    'enum.country.PS': 'Palestine, State of',\n    'enum.country.PA': 'Panama',\n    'enum.country.PG': 'Papua New Guinea',\n    'enum.country.PY': 'Paraguay',\n    'enum.country.PE': 'Peru',\n    'enum.country.PH': 'Philippines',\n    'enum.country.PN': 'Pitcairn',\n    'enum.country.PL': 'Poland',\n    'enum.country.PT': 'Portugal',\n    'enum.country.PR': 'Puerto Rico',\n    'enum.country.QA': 'Qatar',\n    'enum.country.RE': 'Réunion',\n    'enum.country.RO': 'Romania',\n    'enum.country.RU': 'Russian Federation',\n    'enum.country.RW': 'Rwanda',\n    'enum.country.SH': 'Saint Helena, Ascension and Tristan da Cunha',\n    'enum.country.KN': 'Saint Kitts and Nevis',\n    'enum.country.LC': 'Saint Lucia',\n    'enum.country.BL': 'Saint Barthélemy',\n    'enum.country.MF': 'Saint Martin (French part)',\n    'enum.country.PM': 'Saint Pierre and Miquelon',\n    'enum.country.VC': 'Saint Vincent and the Grenadines',\n    'enum.country.WS': 'Samoa',\n    'enum.country.SM': 'San Marino',\n    'enum.country.ST': 'Sao Tome and Principe',\n    'enum.country.SA': 'Saudi Arabia',\n    'enum.country.SN': 'Senegal',\n    'enum.country.RS': 'Serbia',\n    'enum.country.SC': 'Seychelles',\n    'enum.country.SL': 'Sierra Leone',\n    'enum.country.SG': 'Singapore',\n    'enum.country.SX': 'Sint Maarten (Dutch part)',\n    'enum.country.SK': 'Slovakia',\n    'enum.country.SI': 'Slovenia',\n    'enum.country.SB': 'Solomon Islands',\n    'enum.country.SO': 'Somalia',\n    'enum.country.ZA': 'South Africa',\n    'enum.country.GS': 'South Georgia and the South Sandwich Islands',\n    'enum.country.ES': 'Spain',\n    'enum.country.LK': 'Sri Lanka',\n    'enum.country.SD': 'Sudan',\n    'enum.country.SR': 'Suriname',\n    'enum.country.SS': 'South Sudan',\n    'enum.country.SJ': 'Svalbard and Jan Mayen',\n    'enum.country.SZ': 'Eswatini',\n    'enum.country.SE': 'Sweden',\n    'enum.country.CH': 'Switzerland',\n    'enum.country.SY': 'Syrian Arab Republic',\n    'enum.country.TW': 'Taiwan',\n    'enum.country.TJ': 'Tajikistan',\n    'enum.country.TZ': 'Tanzania, United Republic of',\n    'enum.country.TH': 'Thailand',\n    'enum.country.TL': 'Timor-Leste',\n    'enum.country.TG': 'Togo',\n    'enum.country.TK': 'Tokelau',\n    'enum.country.TO': 'Tonga',\n    'enum.country.TT': 'Trinidad and Tobago',\n    'enum.country.TN': 'Tunisia',\n    'enum.country.TR': 'Turkey',\n    'enum.country.TM': 'Turkmenistan',\n    'enum.country.TC': 'Turks and Caicos Islands',\n    'enum.country.TV': 'Tuvalu',\n    'enum.country.UG': 'Uganda',\n    'enum.country.UA': 'Ukraine',\n    'enum.country.AE': 'United Arab Emirates',\n    'enum.country.GB': 'United Kingdom',\n    'enum.country.US': 'United States of America',\n    'enum.country.UM': 'United States Minor Outlying Islands',\n    'enum.country.UY': 'Uruguay',\n    'enum.country.UZ': 'Uzbekistan',\n    'enum.country.VU': 'Vanuatu',\n    'enum.country.VE': 'Venezuela, Bolivarian Republic of',\n    'enum.country.VN': 'Viet Nam',\n    'enum.country.VG': 'Virgin Islands, British',\n    'enum.country.VI': 'Virgin Islands, U.S.',\n    'enum.country.WF': 'Wallis and Futuna',\n    'enum.country.EH': 'Western Sahara',\n    'enum.country.YE': 'Yemen',\n    'enum.country.ZM': 'Zambia',\n    'enum.country.XZ': 'International waters',\n    'enum.country.ZW': 'Zimbabwe',\n    'enum.country.QO': 'Oceania',\n    'enum.country.ZZ': 'Unknown country'\n\t}\n}","// https://github.com/PimpTrizkit/PJs/wiki/12.-Shade,-Blend-and-Convert-a-Web-Color-(pSBC.js)#micro-functions-version-4\nexport const shadeHexColor = (color, percent) => {\n  var f=parseInt(color.slice(1),16),t=percent<0?0:255,p=percent<0?percent*-1:percent,R=f>>16,G=f>>8&0x00FF,B=f&0x0000FF;\n  return \"#\"+(0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1);\n}","import { shadeHexColor } from './utils';\n\nconst defaultTheme = {};\n\nconst themeBuilder =  theme => {\n  const fullTheme = Object.assign({}, defaultTheme, theme);\n  fullTheme.colors.primary500 = theme.colors.primary;\n  fullTheme.colors.primary600 = shadeHexColor(fullTheme.colors.primary500, -0.05);\n  fullTheme.colors.primary700 = shadeHexColor(fullTheme.colors.primary500, -0.1);\n  fullTheme.transparentInk40 = `${fullTheme.color}40`;\n  fullTheme.transparentInk60 = `${fullTheme.color}60`;\n  fullTheme.transparentInk20 = `${fullTheme.color}20`;\n  fullTheme.transparentInk80 = `${fullTheme.color}80`;\n  fullTheme.transparentInk50 = `${fullTheme.color}50`;\n\n  return fullTheme;\n}\n\nexport default themeBuilder;","import React from 'react';\nimport Root from './styles/Root';\nimport { OccurrenceSearch } from './components';\nimport { ThemeProvider } from 'emotion-theming'\nimport { IntlProvider } from \"react-intl\";\nimport en from \"./components/search/OccurrenceSearch/locales/en\";\nimport light from './styles/themes/light';\nimport themeBuilder from './themeBuilder';\nconst theme = themeBuilder(light);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <IntlProvider locale='en' messages={en.messages}>\n        <Root>\n          <OccurrenceSearch style={{ height: '100vh' }}></OccurrenceSearch>\n        </Root>\n      </IntlProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","export default {\n  colors: {\n    primary: '#1ea7fd'\n  },\n  fontSize: '16px',\n  background: '#efefef',\n  paperBackground: '#ffffff',\n  color: '#4a4a4a'\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}